plugins {
    id("com.somnus.bom")
}

ext {
    set("springCloudVersion", "2021.0.4")
    set("springCloudAlibabaVersion", "2021.0.4.0")
    set("okhttp3Version", "4.10.0")
    set("oauth2AuthorizationServerVersion", "0.3.1")
    set("reactivefeignVersion", "3.2.6")
    set("mybatisPlusVersion", "3.5.2")
    set("pagehelperVersion", "1.4.5")
    set("alibabaDruidVersion", "1.1.14")
    set("alibabaEasyexcelVersion", "3.1.1")
    set("redissonVersion", "3.17.6")
    set("googleGuavaVersion", "31.1-jre")
    set("neteaseCloudVersion", "1.3.1")
    set("aliyunOssVersion", "3.15.1")
    set("modelmapperVersion", "3.1.0")
    set("userAgentVersion", "1.21")
    set("jjwtVersion", "0.11.5")
    set("nimbusJoseVersion", "9.25.4")
    set("wechatVersion", "4.4.0")
    set("logstashLogbackVersion", "7.2")
    set("logbackKafkaVersion", "0.2.0-RC2")
    set("shardingsphereVersion", "4.1.1")
    set("elasticjobVersion", "3.0.1")
    set("xxlJobVersion", "2.3.1")
    set("curatorVersion", "5.2.0")
    set("springfoxVersion", "3.0.0")
    set("springdocVersion", "1.6.11")
    set("persistenceApiVersion", "2.2")
    set("ow2AsmVersion", "9.3")
    set("hutoolVersion", "5.8.8")
    set("commonsTextVersion", "1.10.0")
    set("commonsIoVersion", "2.11.0")
    set("ip2regionVersion", "2.6.5")
    set("curatorRecipesVersion","5.3.0")
}

dependencies {
    api(platform(org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES))
    api(platform("org.springframework.cloud:spring-cloud-dependencies:${project.ext["springCloudVersion"]}"))
    api(platform("com.alibaba.cloud:spring-cloud-alibaba-dependencies:${project.ext["springCloudAlibabaVersion"]}"))
    api(platform("com.squareup.okhttp3:okhttp-bom:${project.ext["okhttp3Version"]}"))
    constraints {
        api("com.playtika.reactivefeign:feign-reactor-cloud:${project.ext["reactivefeignVersion"]}")
        api("com.playtika.reactivefeign:feign-reactor-webclient:${project.ext["reactivefeignVersion"]}")
        api("com.playtika.reactivefeign:feign-reactor-spring-configuration:${project.ext["reactivefeignVersion"]}")
        api("io.jsonwebtoken:jjwt-jackson:${project.ext["jjwtVersion"]}")
        api("io.jsonwebtoken:jjwt-impl:${project.ext["jjwtVersion"]}")
        api("com.nimbusds:nimbus-jose-jwt:${project.ext["nimbusJoseVersion"]}")
        api("org.springframework.security:spring-security-oauth2-authorization-server:${project.ext["oauth2AuthorizationServerVersion"]}")
        api("com.baomidou:mybatis-plus-boot-starter:${project.ext["mybatisPlusVersion"]}")
        api("com.github.pagehelper:pagehelper-spring-boot-starter:${project.ext["pagehelperVersion"]}")
        api("org.redisson:redisson:${project.ext["redissonVersion"]}")
        api("org.springdoc:springdoc-openapi-webflux-ui:${project.ext["springdocVersion"]}")
        api("org.apache.shardingsphere:sharding-jdbc-spring-boot-starter:${project.ext["shardingsphereVersion"]}")
        api("com.alibaba:easyexcel:${project.ext["alibabaEasyexcelVersion"]}")
        api("com.google.guava:guava:${project.ext["googleGuavaVersion"]}")
        api("org.modelmapper:modelmapper:${project.ext["modelmapperVersion"]}")
        api("eu.bitwalker:UserAgentUtils:${project.ext["userAgentVersion"]}")
        api("com.netease.cloud:nos-sdk-java-publiccloud:${project.ext["neteaseCloudVersion"]}")
        api("com.aliyun.oss:aliyun-sdk-oss:${project.ext["aliyunOssVersion"]}")
        api("com.github.binarywang:weixin-java-mp:${project.ext["wechatVersion"]}")
        api("net.logstash.logback:logstash-logback-encoder:${project.ext["logstashLogbackVersion"]}")
        api("com.github.danielwegener:logback-kafka-appender:${project.ext["logbackKafkaVersion"]}")
        api("org.apache.shardingsphere.elasticjob:elasticjob-lite-spring-boot-starter:${project.ext["elasticjobVersion"]}")
        api("com.xuxueli:xxl-job-core:${project.ext["xxlJobVersion"]}")
        api("javax.persistence:javax.persistence-api:${project.ext["persistenceApiVersion"]}")
        api("org.ow2.asm:asm:${project.ext["ow2AsmVersion"]}")
        api("cn.hutool:hutool-all:${project.ext["hutoolVersion"]}")
        api("org.apache.commons:commons-text:${project.ext["commonsTextVersion"]}")
        api("commons-io:commons-io:${project.ext["commonsIoVersion"]}")
        api("org.lionsoul:ip2region:${project.ext["ip2regionVersion"]}")
        api("org.apache.curator:curator-recipes:${project.ext["curatorRecipesVersion"]}")
    }
}
